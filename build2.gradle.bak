//plugins {
//	id 'org.springframework.boot' version '2.2.6.RELEASE'
//	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
//	id 'java'
//}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
//引入 mybatis-generator 插件mybatis-generetor
apply plugin: "com.arenagod.gradle.MybatisGenerator"


buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
      mavenCentral()
      //添加maven仓库 mybatis-generetor
      maven {
         url "https://plugins.gradle.org/m2/"
      }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.3.6"
    }
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	//mavenCentral()
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}

}


configurations {
   //这里需要使用 MyBatis Generator，MySQL 驱动，以及 MyBatis Mapper.
   //由于代码生成单独运行即可,不需要参与到整个项目的编译，因此在 build.gradle 中添加配置：
   mybatisGenerator
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	//lombok辅助包
	compile 'org.projectlombok:lombok:1.16.16'

	//Swagger
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.6.1'
	
	//mybatis
   	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
   	//mybatis-geerator
  	compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.6'
	//mysql
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
}

// mybatis-generator.xml 配置路径
mybatisGenerator {
   verbose = true
   configFile = 'src/main/resources/mybatis/generator.xml'
}

test {
	useJUnitPlatform()
}
